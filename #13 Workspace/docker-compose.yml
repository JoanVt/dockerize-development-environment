version: '3.5'

services:
    nginx:
        build:
            context: ./docker/nginx
            args:
                DEV_DOMAIN: ${DEV_DOMAIN}
                NGINX_SSL: ${NGINX_SSL}
        image: 'nginx:alpine'
        container_name: ${PROJECT_NAME}-nginx
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf
            - ./code:/code
            - ./logs/nginx/nginx-error.log:/var/log/nginx/error_manual.log
            - ./logs/nginx/nginx-access.log:/var/log/nginx/access_manual.log
        links:
            - php
            - mysql

    php:
        build:
            context: ./docker/php
            args:
                XDEBUG_REMOTE_HOST: ${XDEBUG_REMOTE_HOST}
                XDEBUG_IDE_KEY: ${XDEBUG_IDE_KEY}
                XDEBUG_PORT: ${XDEBUG_PORT}
        image: 'php:alpine'
        container_name: ${PROJECT_NAME}-php
        ports:
            - '9000:9000'
        volumes:
            - ./code:/code
            - ./docker/php/conf/php.ini-${PHP_FPM_CONF}:/usr/local/etc/php/php.ini
            - ./logs/php/php.log:/var/log/php-fpm/errors.log

    mysql:
        build:
            context: ./docker/mysql
        image: 'mysql:5.7'
        container_name: ${PROJECT_NAME}-mysql
        environment:
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        volumes:
            - ./docker/mysql/conf/my.cnf:/etc/my.cnf
            - ./logs/mysql/mysql.log:/var/log/mysqld.log
            - ./docker/mysql/database:/var/lib/mysql
        ports:
            - '3306:3306'

    redis:
        build:
            context: ./docker/redis
        image: 'redis:alpine'
        container_name: ${PROJECT_NAME}-redis
        volumes:
            - ./logs/redis/redis.log:/var/log/redis/errors.log
        ports:
          - '6379:6379'

    workspace:
        build:
            context: ./docker/workspace
            args:
                WORKSPACE_NODE_VERSION: ${WORKSPACE_NODE_VERSION}
                MYSQL_USER: ${MYSQL_USER}
                MYSQL_PASSWORD: ${MYSQL_PASSWORD}
                MYSQL_DATABASE: ${MYSQL_DATABASE}
        image: 'workspace:ubuntu'
        container_name: ${PROJECT_NAME}-workspace
        volumes:
            - ./code:/code
        links:
            - redis
            - mysql
        ports:
            - '3000:3000'